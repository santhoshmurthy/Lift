package com.LAW.Lift.adapter;import android.content.ActivityNotFoundException;import android.content.Context;import android.content.Intent;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.net.Uri;import android.os.AsyncTask;import android.os.Bundle;import android.os.Environment;import android.support.v4.app.ShareCompat;import android.text.Html;import android.util.Log;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import android.widget.ArrayAdapter;import android.widget.TextView;import android.widget.Toast;import java.io.BufferedInputStream;import java.io.File;import java.io.FileOutputStream;import java.io.InputStream;import java.io.OutputStream;import java.net.URL;import java.net.URLConnection;import java.util.ArrayList;import java.util.List;import com.LAW.Lift.R;import com.LAW.Lift.activity.CentralLegislation;import com.LAW.Lift.activity.Library;import com.LAW.Lift.activity.MainActivity;import com.LAW.Lift.model.Card;import com.LAW.Lift.model.librarycard;import static android.support.v4.app.ActivityCompat.startActivity;public class CardArrayAdapter extends ArrayAdapter<Card> {    private static final String TAG = "CardArrayAdapter";    private List<Card> cardList = new ArrayList<Card>();    Card Card;    String Url, lawfull;    int textViewResourceId;    //Map<String, String> addToCartMap = new HashMap<>();    public CardArrayAdapter(Context context, int textViewResourceId) {        super(context, textViewResourceId);        this.textViewResourceId = textViewResourceId;    }    @Override    public void add(Card object) {        cardList.add(object);        super.add(object);    }    @Override    public int getCount() {        return this.cardList.size();    }    @Override    public Card getItem(int index) {        return this.cardList.get(index);    }    @Override    public View getView(final int position, View convertView, ViewGroup parent) {        View row = convertView;        final CardViewHolder viewHolder;        if (row == null) {            LayoutInflater inflater = (LayoutInflater) this.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);            row = inflater.inflate(textViewResourceId, parent, false);            viewHolder = new CardViewHolder();            viewHolder.line1 = (TextView) row.findViewById(R.id.lawname);            viewHolder.line2 = (TextView) row.findViewById(R.id.lawactno);            viewHolder.line3 = (TextView) row.findViewById(R.id.lawenactedby);            viewHolder.line4 = (TextView) row.findViewById(R.id.lawreceived);            viewHolder.line5 = (TextView) row.findViewById(R.id.lawpublished);            viewHolder.line6 = (TextView) row.findViewById(R.id.lawcame);            viewHolder.line7 = (TextView) row.findViewById(R.id.lawsalient);            viewHolder.line8 = (TextView) row.findViewById(R.id.lawbrief);            viewHolder.line9 = (TextView) row.findViewById(R.id.lawfull);            //viewHolder.line2 = (TextView) row.findViewById(R.id.bus_location);            //viewHolder.line3 = (TextView) row.findViewById(R.id.bus_time);            row.setTag(viewHolder);        } else {            viewHolder = (CardViewHolder) row.getTag();        }        final Card card = getItem(position);        viewHolder.line1.setText(card.getlawname());        viewHolder.line2.setText(card.getlawactno());        viewHolder.line3.setText(card.getlawenactedby());        viewHolder.line4.setText(card.getlawreceived());        viewHolder.line5.setText(card.getlawpublished());        viewHolder.line6.setText(card.getlawcame());        viewHolder.line7.setText(card.getlawsalient());        viewHolder.line8.setText(card.getlawbrief());        viewHolder.line9.setText(card.getlawfulltext());        viewHolder.line1.setSelected(true);        viewHolder.line2.setSelected(true);        viewHolder.line3.setSelected(true);        viewHolder.line4.setSelected(true);        viewHolder.line5.setSelected(true);        viewHolder.line6.setSelected(true);        viewHolder.line7.setSelected(true);        viewHolder.line8.setSelected(true);        viewHolder.line9.setSelected(true);        if(card.getlawname().equals("")){            viewHolder.line1.setText("Content not uploaded");        }else {            viewHolder.line1.setText(card.getlawname());        }        if(card.getlawactno().equals("")){            viewHolder.line2.setText("Content not uploaded");        }else {            viewHolder.line2.setText(card.getlawactno());        }        if(card.getlawenactedby().equals("")){            viewHolder.line3.setText("Content not uploaded");        }else {            viewHolder.line3.setText(card.getlawenactedby());        }        if(card.getlawreceived().equals("")){            viewHolder.line4.setText("Content not uploaded");        }else {            viewHolder.line4.setText(card.getlawreceived());        }        if(card.getlawpublished().equals("")){            viewHolder.line5.setText("Content not uploaded");        }else {            viewHolder.line5.setText(card.getlawpublished());        }        if(card.getlawcame().equals("")){            viewHolder.line6.setText("Content not uploaded");        }else {            viewHolder.line6.setText(card.getlawcame());        }        if(card.getlawsalient().equals("")){            viewHolder.line7.setText("Content not uploaded");        }else {            viewHolder.line7.setText(card.getlawsalient());        }        if(card.getlawbrief().equals("")){            viewHolder.line8.setText("Content not uploaded");        }else {            viewHolder.line8.setText(card.getlawbrief());        }        if(card.getlawfulltext().equals("")){            viewHolder.line9.setText("Content not uploaded");        }else {            viewHolder.line9.setText(card.getlawfulltext());        }        if (viewHolder.line1 != null)            viewHolder.line1.setText(Html.fromHtml(card.getlawname().toString()));        if (viewHolder.line7 != null)            viewHolder.line7.setText(Html.fromHtml(card.getlawsalient()).toString());        //  }        //if (row != null) {        //TextView line8 = (TextView) row.findViewById(R.id.lawbrief);        if (viewHolder.line8 != null)            viewHolder.line8.setText(Html.fromHtml(card.getlawbrief()).toString());        return row;    }   /* if(card.getPingtime().equals("")){        viewHolder.line4.setText("Unable to ping");    }else {        viewHolder.line4.setText(card.getPingtime()+" ms");    }*/  /*  File file = new File(Environment.getExternalStorageDirectory().getAbsolutePath()+"/example.pdf");    Intent intent = new Intent(Intent.ACTION_VIEW);    intent.setDataAndType(Uri.fromFile(file), "application/pdf");    intent.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);    startActivity(intent);*/    public Bitmap decodeToBitmap(byte[] decodedByte) {        return BitmapFactory.decodeByteArray(decodedByte, 0, decodedByte.length);    }    static class CardViewHolder {        TextView line1;        TextView line2;        TextView line3;        TextView line4;        TextView line5;        TextView line6;        TextView line7;        TextView line8;        TextView line9;    }}